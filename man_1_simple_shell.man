.TH SIMPLE_SHELL "ALX-Holberton" 
.SH NAME
_SIMPLE_SHELL \-formatted output conversion
.SH SYNOPSIS
.BR
#include "holberton.h"
 
.I format
.B , ...)
.SH DESCRIPTION
.B _printf()
Prints to standard output under the control of a 
.I format
string that specifies how subsequent arguments are converted for output. 
.SH Return value
Upon successful return, these functions return the number of characters printed, excluding the null byte used to end output to strings.

If an output error is encountered, a negative value is returned.
.SH Format of the format stringThe format string is composed of 0 or more directives (ordinary characters that are not %), which are copied to the output stream.
.SH The conversion specifier
A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:
.TP
.BR c
The int argument is converted to an unsigned char, then the resulting character is written
.TP
.B s
The const char * argument is a pointer to an array of character type (pointer to a string). Characters from the array are written up to the character right before the terminating null byte and do not include the terminating null byte.
.TP

.B %
A '%' is written but no argument is converted. The complete version specification is '%%'
.SH EXAMPLE
.B %c
.PP
_printf("VOWELS of the alphabet:[%c][%c][%c][%c][%c]\n", 'a', 'e', 'i', 'o', 'u');
.PP
.I Output:
aeiou
.PP
.B %s
.PP
_printf("String:[%s]\n", "I love ALX");
.PP
.I Output:
I love ALX

.SH SEE ALSO
.I printf(3)
.SH BUGS
No known bugs.
.SH AUTHOR
David Mutune, Millicent Malinga
